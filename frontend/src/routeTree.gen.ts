/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TerminalIndexImport } from './routes/terminal/index'
import { Route as SessiondraftIndexImport } from './routes/sessiondraft/index'
import { Route as InboxIndexImport } from './routes/inbox/index'
import { Route as DebugIndexImport } from './routes/debug/index'
import { Route as FrontpageIndexImport } from './routes/_frontpage/index'
import { Route as LibrarySearchImport } from './routes/library/search'
import { Route as LibraryBrowseImport } from './routes/library/browse'
import { Route as DebugJobsImport } from './routes/debug/jobs'
import { Route as DebugErrorImport } from './routes/debug/error'
import { Route as DebugAudioImport } from './routes/debug/audio'
import { Route as LibraryBrowseArtistImport } from './routes/library/browse.$artist'
import { Route as LibrarybrowseAlbumsImport } from './routes/library/(browse)/albums'
import { Route as InboxTaskTaskIdImport } from './routes/inbox/task.$taskId'
import { Route as InboxFolderPathImport } from './routes/inbox/folder.$path'
import { Route as DebugDesignLoadingImport } from './routes/debug/design/loading'
import { Route as DebugDesignIconsImport } from './routes/debug/design/icons'
import { Route as LibrarybrowseArtistsRouteImport } from './routes/library/(browse)/artists.route'
import { Route as LibrarybrowseArtistsIndexImport } from './routes/library/(browse)/artists.index'
import { Route as LibraryBrowseArtistAlbumIdImport } from './routes/library/browse.$artist.$albumId'
import { Route as LibrarybrowseArtistsArtistImport } from './routes/library/(browse)/artists.$artist'
import { Route as InboxFolderPathHashImport } from './routes/inbox/folder_.$path.$hash'
import { Route as LibraryresourcesItemItemIdRouteImport } from './routes/library/(resources)/item.$itemId.route'
import { Route as LibraryresourcesAlbumAlbumIdRouteImport } from './routes/library/(resources)/album.$albumId.route'
import { Route as LibraryresourcesAlbumAlbumIdIndexImport } from './routes/library/(resources)/album.$albumId.index'
import { Route as LibraryBrowseArtistAlbumIdItemIdImport } from './routes/library/browse.$artist.$albumId.$itemId'
import { Route as LibraryresourcesItemItemIdIdentifierImport } from './routes/library/(resources)/item.$itemId.identifier'
import { Route as LibraryresourcesItemItemIdBeetsdataImport } from './routes/library/(resources)/item.$itemId.beetsdata'
import { Route as LibraryresourcesAlbumAlbumIdIdentifierImport } from './routes/library/(resources)/album.$albumId.identifier'
import { Route as LibraryresourcesAlbumAlbumIdBeetsdataImport } from './routes/library/(resources)/album.$albumId.beetsdata'

// Create/Update Routes

const TerminalIndexRoute = TerminalIndexImport.update({
  id: '/terminal/',
  path: '/terminal/',
  getParentRoute: () => rootRoute,
} as any)

const SessiondraftIndexRoute = SessiondraftIndexImport.update({
  id: '/sessiondraft/',
  path: '/sessiondraft/',
  getParentRoute: () => rootRoute,
} as any)

const InboxIndexRoute = InboxIndexImport.update({
  id: '/inbox/',
  path: '/inbox/',
  getParentRoute: () => rootRoute,
} as any)

const DebugIndexRoute = DebugIndexImport.update({
  id: '/debug/',
  path: '/debug/',
  getParentRoute: () => rootRoute,
} as any)

const FrontpageIndexRoute = FrontpageIndexImport.update({
  id: '/_frontpage/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LibrarySearchRoute = LibrarySearchImport.update({
  id: '/library/search',
  path: '/library/search',
  getParentRoute: () => rootRoute,
} as any)

const LibraryBrowseRoute = LibraryBrowseImport.update({
  id: '/library/browse',
  path: '/library/browse',
  getParentRoute: () => rootRoute,
} as any)

const DebugJobsRoute = DebugJobsImport.update({
  id: '/debug/jobs',
  path: '/debug/jobs',
  getParentRoute: () => rootRoute,
} as any)

const DebugErrorRoute = DebugErrorImport.update({
  id: '/debug/error',
  path: '/debug/error',
  getParentRoute: () => rootRoute,
} as any)

const DebugAudioRoute = DebugAudioImport.update({
  id: '/debug/audio',
  path: '/debug/audio',
  getParentRoute: () => rootRoute,
} as any)

const LibraryBrowseArtistRoute = LibraryBrowseArtistImport.update({
  id: '/$artist',
  path: '/$artist',
  getParentRoute: () => LibraryBrowseRoute,
} as any)

const LibrarybrowseAlbumsRoute = LibrarybrowseAlbumsImport.update({
  id: '/library/(browse)/albums',
  path: '/library/albums',
  getParentRoute: () => rootRoute,
} as any)

const InboxTaskTaskIdRoute = InboxTaskTaskIdImport.update({
  id: '/inbox/task/$taskId',
  path: '/inbox/task/$taskId',
  getParentRoute: () => rootRoute,
} as any)

const InboxFolderPathRoute = InboxFolderPathImport.update({
  id: '/inbox/folder/$path',
  path: '/inbox/folder/$path',
  getParentRoute: () => rootRoute,
} as any)

const DebugDesignLoadingRoute = DebugDesignLoadingImport.update({
  id: '/debug/design/loading',
  path: '/debug/design/loading',
  getParentRoute: () => rootRoute,
} as any)

const DebugDesignIconsRoute = DebugDesignIconsImport.update({
  id: '/debug/design/icons',
  path: '/debug/design/icons',
  getParentRoute: () => rootRoute,
} as any)

const LibrarybrowseArtistsRouteRoute = LibrarybrowseArtistsRouteImport.update({
  id: '/library/(browse)/artists',
  path: '/library/artists',
  getParentRoute: () => rootRoute,
} as any)

const LibrarybrowseArtistsIndexRoute = LibrarybrowseArtistsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LibrarybrowseArtistsRouteRoute,
} as any)

const LibraryBrowseArtistAlbumIdRoute = LibraryBrowseArtistAlbumIdImport.update(
  {
    id: '/$albumId',
    path: '/$albumId',
    getParentRoute: () => LibraryBrowseArtistRoute,
  } as any,
)

const LibrarybrowseArtistsArtistRoute = LibrarybrowseArtistsArtistImport.update(
  {
    id: '/$artist',
    path: '/$artist',
    getParentRoute: () => LibrarybrowseArtistsRouteRoute,
  } as any,
)

const InboxFolderPathHashRoute = InboxFolderPathHashImport.update({
  id: '/inbox/folder_/$path/$hash',
  path: '/inbox/folder/$path/$hash',
  getParentRoute: () => rootRoute,
} as any)

const LibraryresourcesItemItemIdRouteRoute =
  LibraryresourcesItemItemIdRouteImport.update({
    id: '/library/(resources)/item/$itemId',
    path: '/library/item/$itemId',
    getParentRoute: () => rootRoute,
  } as any)

const LibraryresourcesAlbumAlbumIdRouteRoute =
  LibraryresourcesAlbumAlbumIdRouteImport.update({
    id: '/library/(resources)/album/$albumId',
    path: '/library/album/$albumId',
    getParentRoute: () => rootRoute,
  } as any)

const LibraryresourcesAlbumAlbumIdIndexRoute =
  LibraryresourcesAlbumAlbumIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LibraryresourcesAlbumAlbumIdRouteRoute,
  } as any)

const LibraryBrowseArtistAlbumIdItemIdRoute =
  LibraryBrowseArtistAlbumIdItemIdImport.update({
    id: '/$itemId',
    path: '/$itemId',
    getParentRoute: () => LibraryBrowseArtistAlbumIdRoute,
  } as any)

const LibraryresourcesItemItemIdIdentifierRoute =
  LibraryresourcesItemItemIdIdentifierImport.update({
    id: '/identifier',
    path: '/identifier',
    getParentRoute: () => LibraryresourcesItemItemIdRouteRoute,
  } as any)

const LibraryresourcesItemItemIdBeetsdataRoute =
  LibraryresourcesItemItemIdBeetsdataImport.update({
    id: '/beetsdata',
    path: '/beetsdata',
    getParentRoute: () => LibraryresourcesItemItemIdRouteRoute,
  } as any)

const LibraryresourcesAlbumAlbumIdIdentifierRoute =
  LibraryresourcesAlbumAlbumIdIdentifierImport.update({
    id: '/identifier',
    path: '/identifier',
    getParentRoute: () => LibraryresourcesAlbumAlbumIdRouteRoute,
  } as any)

const LibraryresourcesAlbumAlbumIdBeetsdataRoute =
  LibraryresourcesAlbumAlbumIdBeetsdataImport.update({
    id: '/beetsdata',
    path: '/beetsdata',
    getParentRoute: () => LibraryresourcesAlbumAlbumIdRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/debug/audio': {
      id: '/debug/audio'
      path: '/debug/audio'
      fullPath: '/debug/audio'
      preLoaderRoute: typeof DebugAudioImport
      parentRoute: typeof rootRoute
    }
    '/debug/error': {
      id: '/debug/error'
      path: '/debug/error'
      fullPath: '/debug/error'
      preLoaderRoute: typeof DebugErrorImport
      parentRoute: typeof rootRoute
    }
    '/debug/jobs': {
      id: '/debug/jobs'
      path: '/debug/jobs'
      fullPath: '/debug/jobs'
      preLoaderRoute: typeof DebugJobsImport
      parentRoute: typeof rootRoute
    }
    '/library/browse': {
      id: '/library/browse'
      path: '/library/browse'
      fullPath: '/library/browse'
      preLoaderRoute: typeof LibraryBrowseImport
      parentRoute: typeof rootRoute
    }
    '/library/search': {
      id: '/library/search'
      path: '/library/search'
      fullPath: '/library/search'
      preLoaderRoute: typeof LibrarySearchImport
      parentRoute: typeof rootRoute
    }
    '/_frontpage/': {
      id: '/_frontpage/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof FrontpageIndexImport
      parentRoute: typeof rootRoute
    }
    '/debug/': {
      id: '/debug/'
      path: '/debug'
      fullPath: '/debug'
      preLoaderRoute: typeof DebugIndexImport
      parentRoute: typeof rootRoute
    }
    '/inbox/': {
      id: '/inbox/'
      path: '/inbox'
      fullPath: '/inbox'
      preLoaderRoute: typeof InboxIndexImport
      parentRoute: typeof rootRoute
    }
    '/sessiondraft/': {
      id: '/sessiondraft/'
      path: '/sessiondraft'
      fullPath: '/sessiondraft'
      preLoaderRoute: typeof SessiondraftIndexImport
      parentRoute: typeof rootRoute
    }
    '/terminal/': {
      id: '/terminal/'
      path: '/terminal'
      fullPath: '/terminal'
      preLoaderRoute: typeof TerminalIndexImport
      parentRoute: typeof rootRoute
    }
    '/library/(browse)/artists': {
      id: '/library/(browse)/artists'
      path: '/library/artists'
      fullPath: '/library/artists'
      preLoaderRoute: typeof LibrarybrowseArtistsRouteImport
      parentRoute: typeof rootRoute
    }
    '/debug/design/icons': {
      id: '/debug/design/icons'
      path: '/debug/design/icons'
      fullPath: '/debug/design/icons'
      preLoaderRoute: typeof DebugDesignIconsImport
      parentRoute: typeof rootRoute
    }
    '/debug/design/loading': {
      id: '/debug/design/loading'
      path: '/debug/design/loading'
      fullPath: '/debug/design/loading'
      preLoaderRoute: typeof DebugDesignLoadingImport
      parentRoute: typeof rootRoute
    }
    '/inbox/folder/$path': {
      id: '/inbox/folder/$path'
      path: '/inbox/folder/$path'
      fullPath: '/inbox/folder/$path'
      preLoaderRoute: typeof InboxFolderPathImport
      parentRoute: typeof rootRoute
    }
    '/inbox/task/$taskId': {
      id: '/inbox/task/$taskId'
      path: '/inbox/task/$taskId'
      fullPath: '/inbox/task/$taskId'
      preLoaderRoute: typeof InboxTaskTaskIdImport
      parentRoute: typeof rootRoute
    }
    '/library/(browse)/albums': {
      id: '/library/(browse)/albums'
      path: '/library/albums'
      fullPath: '/library/albums'
      preLoaderRoute: typeof LibrarybrowseAlbumsImport
      parentRoute: typeof rootRoute
    }
    '/library/browse/$artist': {
      id: '/library/browse/$artist'
      path: '/$artist'
      fullPath: '/library/browse/$artist'
      preLoaderRoute: typeof LibraryBrowseArtistImport
      parentRoute: typeof LibraryBrowseImport
    }
    '/library/(resources)/album/$albumId': {
      id: '/library/(resources)/album/$albumId'
      path: '/library/album/$albumId'
      fullPath: '/library/album/$albumId'
      preLoaderRoute: typeof LibraryresourcesAlbumAlbumIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/library/(resources)/item/$itemId': {
      id: '/library/(resources)/item/$itemId'
      path: '/library/item/$itemId'
      fullPath: '/library/item/$itemId'
      preLoaderRoute: typeof LibraryresourcesItemItemIdRouteImport
      parentRoute: typeof rootRoute
    }
    '/inbox/folder_/$path/$hash': {
      id: '/inbox/folder_/$path/$hash'
      path: '/inbox/folder/$path/$hash'
      fullPath: '/inbox/folder/$path/$hash'
      preLoaderRoute: typeof InboxFolderPathHashImport
      parentRoute: typeof rootRoute
    }
    '/library/(browse)/artists/$artist': {
      id: '/library/(browse)/artists/$artist'
      path: '/$artist'
      fullPath: '/library/artists/$artist'
      preLoaderRoute: typeof LibrarybrowseArtistsArtistImport
      parentRoute: typeof LibrarybrowseArtistsRouteImport
    }
    '/library/browse/$artist/$albumId': {
      id: '/library/browse/$artist/$albumId'
      path: '/$albumId'
      fullPath: '/library/browse/$artist/$albumId'
      preLoaderRoute: typeof LibraryBrowseArtistAlbumIdImport
      parentRoute: typeof LibraryBrowseArtistImport
    }
    '/library/(browse)/artists/': {
      id: '/library/(browse)/artists/'
      path: '/'
      fullPath: '/library/artists/'
      preLoaderRoute: typeof LibrarybrowseArtistsIndexImport
      parentRoute: typeof LibrarybrowseArtistsRouteImport
    }
    '/library/(resources)/album/$albumId/beetsdata': {
      id: '/library/(resources)/album/$albumId/beetsdata'
      path: '/beetsdata'
      fullPath: '/library/album/$albumId/beetsdata'
      preLoaderRoute: typeof LibraryresourcesAlbumAlbumIdBeetsdataImport
      parentRoute: typeof LibraryresourcesAlbumAlbumIdRouteImport
    }
    '/library/(resources)/album/$albumId/identifier': {
      id: '/library/(resources)/album/$albumId/identifier'
      path: '/identifier'
      fullPath: '/library/album/$albumId/identifier'
      preLoaderRoute: typeof LibraryresourcesAlbumAlbumIdIdentifierImport
      parentRoute: typeof LibraryresourcesAlbumAlbumIdRouteImport
    }
    '/library/(resources)/item/$itemId/beetsdata': {
      id: '/library/(resources)/item/$itemId/beetsdata'
      path: '/beetsdata'
      fullPath: '/library/item/$itemId/beetsdata'
      preLoaderRoute: typeof LibraryresourcesItemItemIdBeetsdataImport
      parentRoute: typeof LibraryresourcesItemItemIdRouteImport
    }
    '/library/(resources)/item/$itemId/identifier': {
      id: '/library/(resources)/item/$itemId/identifier'
      path: '/identifier'
      fullPath: '/library/item/$itemId/identifier'
      preLoaderRoute: typeof LibraryresourcesItemItemIdIdentifierImport
      parentRoute: typeof LibraryresourcesItemItemIdRouteImport
    }
    '/library/browse/$artist/$albumId/$itemId': {
      id: '/library/browse/$artist/$albumId/$itemId'
      path: '/$itemId'
      fullPath: '/library/browse/$artist/$albumId/$itemId'
      preLoaderRoute: typeof LibraryBrowseArtistAlbumIdItemIdImport
      parentRoute: typeof LibraryBrowseArtistAlbumIdImport
    }
    '/library/(resources)/album/$albumId/': {
      id: '/library/(resources)/album/$albumId/'
      path: '/'
      fullPath: '/library/album/$albumId/'
      preLoaderRoute: typeof LibraryresourcesAlbumAlbumIdIndexImport
      parentRoute: typeof LibraryresourcesAlbumAlbumIdRouteImport
    }
  }
}

// Create and export the route tree

interface LibraryBrowseArtistAlbumIdRouteChildren {
  LibraryBrowseArtistAlbumIdItemIdRoute: typeof LibraryBrowseArtistAlbumIdItemIdRoute
}

const LibraryBrowseArtistAlbumIdRouteChildren: LibraryBrowseArtistAlbumIdRouteChildren =
  {
    LibraryBrowseArtistAlbumIdItemIdRoute:
      LibraryBrowseArtistAlbumIdItemIdRoute,
  }

const LibraryBrowseArtistAlbumIdRouteWithChildren =
  LibraryBrowseArtistAlbumIdRoute._addFileChildren(
    LibraryBrowseArtistAlbumIdRouteChildren,
  )

interface LibraryBrowseArtistRouteChildren {
  LibraryBrowseArtistAlbumIdRoute: typeof LibraryBrowseArtistAlbumIdRouteWithChildren
}

const LibraryBrowseArtistRouteChildren: LibraryBrowseArtistRouteChildren = {
  LibraryBrowseArtistAlbumIdRoute: LibraryBrowseArtistAlbumIdRouteWithChildren,
}

const LibraryBrowseArtistRouteWithChildren =
  LibraryBrowseArtistRoute._addFileChildren(LibraryBrowseArtistRouteChildren)

interface LibraryBrowseRouteChildren {
  LibraryBrowseArtistRoute: typeof LibraryBrowseArtistRouteWithChildren
}

const LibraryBrowseRouteChildren: LibraryBrowseRouteChildren = {
  LibraryBrowseArtistRoute: LibraryBrowseArtistRouteWithChildren,
}

const LibraryBrowseRouteWithChildren = LibraryBrowseRoute._addFileChildren(
  LibraryBrowseRouteChildren,
)

interface LibrarybrowseArtistsRouteRouteChildren {
  LibrarybrowseArtistsArtistRoute: typeof LibrarybrowseArtistsArtistRoute
  LibrarybrowseArtistsIndexRoute: typeof LibrarybrowseArtistsIndexRoute
}

const LibrarybrowseArtistsRouteRouteChildren: LibrarybrowseArtistsRouteRouteChildren =
  {
    LibrarybrowseArtistsArtistRoute: LibrarybrowseArtistsArtistRoute,
    LibrarybrowseArtistsIndexRoute: LibrarybrowseArtistsIndexRoute,
  }

const LibrarybrowseArtistsRouteRouteWithChildren =
  LibrarybrowseArtistsRouteRoute._addFileChildren(
    LibrarybrowseArtistsRouteRouteChildren,
  )

interface LibraryresourcesAlbumAlbumIdRouteRouteChildren {
  LibraryresourcesAlbumAlbumIdBeetsdataRoute: typeof LibraryresourcesAlbumAlbumIdBeetsdataRoute
  LibraryresourcesAlbumAlbumIdIdentifierRoute: typeof LibraryresourcesAlbumAlbumIdIdentifierRoute
  LibraryresourcesAlbumAlbumIdIndexRoute: typeof LibraryresourcesAlbumAlbumIdIndexRoute
}

const LibraryresourcesAlbumAlbumIdRouteRouteChildren: LibraryresourcesAlbumAlbumIdRouteRouteChildren =
  {
    LibraryresourcesAlbumAlbumIdBeetsdataRoute:
      LibraryresourcesAlbumAlbumIdBeetsdataRoute,
    LibraryresourcesAlbumAlbumIdIdentifierRoute:
      LibraryresourcesAlbumAlbumIdIdentifierRoute,
    LibraryresourcesAlbumAlbumIdIndexRoute:
      LibraryresourcesAlbumAlbumIdIndexRoute,
  }

const LibraryresourcesAlbumAlbumIdRouteRouteWithChildren =
  LibraryresourcesAlbumAlbumIdRouteRoute._addFileChildren(
    LibraryresourcesAlbumAlbumIdRouteRouteChildren,
  )

interface LibraryresourcesItemItemIdRouteRouteChildren {
  LibraryresourcesItemItemIdBeetsdataRoute: typeof LibraryresourcesItemItemIdBeetsdataRoute
  LibraryresourcesItemItemIdIdentifierRoute: typeof LibraryresourcesItemItemIdIdentifierRoute
}

const LibraryresourcesItemItemIdRouteRouteChildren: LibraryresourcesItemItemIdRouteRouteChildren =
  {
    LibraryresourcesItemItemIdBeetsdataRoute:
      LibraryresourcesItemItemIdBeetsdataRoute,
    LibraryresourcesItemItemIdIdentifierRoute:
      LibraryresourcesItemItemIdIdentifierRoute,
  }

const LibraryresourcesItemItemIdRouteRouteWithChildren =
  LibraryresourcesItemItemIdRouteRoute._addFileChildren(
    LibraryresourcesItemItemIdRouteRouteChildren,
  )

export interface FileRoutesByFullPath {
  '/debug/audio': typeof DebugAudioRoute
  '/debug/error': typeof DebugErrorRoute
  '/debug/jobs': typeof DebugJobsRoute
  '/library/browse': typeof LibraryBrowseRouteWithChildren
  '/library/search': typeof LibrarySearchRoute
  '/': typeof FrontpageIndexRoute
  '/debug': typeof DebugIndexRoute
  '/inbox': typeof InboxIndexRoute
  '/sessiondraft': typeof SessiondraftIndexRoute
  '/terminal': typeof TerminalIndexRoute
  '/library/artists': typeof LibrarybrowseArtistsRouteRouteWithChildren
  '/debug/design/icons': typeof DebugDesignIconsRoute
  '/debug/design/loading': typeof DebugDesignLoadingRoute
  '/inbox/folder/$path': typeof InboxFolderPathRoute
  '/inbox/task/$taskId': typeof InboxTaskTaskIdRoute
  '/library/albums': typeof LibrarybrowseAlbumsRoute
  '/library/browse/$artist': typeof LibraryBrowseArtistRouteWithChildren
  '/library/album/$albumId': typeof LibraryresourcesAlbumAlbumIdRouteRouteWithChildren
  '/library/item/$itemId': typeof LibraryresourcesItemItemIdRouteRouteWithChildren
  '/inbox/folder/$path/$hash': typeof InboxFolderPathHashRoute
  '/library/artists/$artist': typeof LibrarybrowseArtistsArtistRoute
  '/library/browse/$artist/$albumId': typeof LibraryBrowseArtistAlbumIdRouteWithChildren
  '/library/artists/': typeof LibrarybrowseArtistsIndexRoute
  '/library/album/$albumId/beetsdata': typeof LibraryresourcesAlbumAlbumIdBeetsdataRoute
  '/library/album/$albumId/identifier': typeof LibraryresourcesAlbumAlbumIdIdentifierRoute
  '/library/item/$itemId/beetsdata': typeof LibraryresourcesItemItemIdBeetsdataRoute
  '/library/item/$itemId/identifier': typeof LibraryresourcesItemItemIdIdentifierRoute
  '/library/browse/$artist/$albumId/$itemId': typeof LibraryBrowseArtistAlbumIdItemIdRoute
  '/library/album/$albumId/': typeof LibraryresourcesAlbumAlbumIdIndexRoute
}

export interface FileRoutesByTo {
  '/debug/audio': typeof DebugAudioRoute
  '/debug/error': typeof DebugErrorRoute
  '/debug/jobs': typeof DebugJobsRoute
  '/library/browse': typeof LibraryBrowseRouteWithChildren
  '/library/search': typeof LibrarySearchRoute
  '/': typeof FrontpageIndexRoute
  '/debug': typeof DebugIndexRoute
  '/inbox': typeof InboxIndexRoute
  '/sessiondraft': typeof SessiondraftIndexRoute
  '/terminal': typeof TerminalIndexRoute
  '/debug/design/icons': typeof DebugDesignIconsRoute
  '/debug/design/loading': typeof DebugDesignLoadingRoute
  '/inbox/folder/$path': typeof InboxFolderPathRoute
  '/inbox/task/$taskId': typeof InboxTaskTaskIdRoute
  '/library/albums': typeof LibrarybrowseAlbumsRoute
  '/library/browse/$artist': typeof LibraryBrowseArtistRouteWithChildren
  '/library/item/$itemId': typeof LibraryresourcesItemItemIdRouteRouteWithChildren
  '/inbox/folder/$path/$hash': typeof InboxFolderPathHashRoute
  '/library/artists/$artist': typeof LibrarybrowseArtistsArtistRoute
  '/library/browse/$artist/$albumId': typeof LibraryBrowseArtistAlbumIdRouteWithChildren
  '/library/artists': typeof LibrarybrowseArtistsIndexRoute
  '/library/album/$albumId/beetsdata': typeof LibraryresourcesAlbumAlbumIdBeetsdataRoute
  '/library/album/$albumId/identifier': typeof LibraryresourcesAlbumAlbumIdIdentifierRoute
  '/library/item/$itemId/beetsdata': typeof LibraryresourcesItemItemIdBeetsdataRoute
  '/library/item/$itemId/identifier': typeof LibraryresourcesItemItemIdIdentifierRoute
  '/library/browse/$artist/$albumId/$itemId': typeof LibraryBrowseArtistAlbumIdItemIdRoute
  '/library/album/$albumId': typeof LibraryresourcesAlbumAlbumIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/debug/audio': typeof DebugAudioRoute
  '/debug/error': typeof DebugErrorRoute
  '/debug/jobs': typeof DebugJobsRoute
  '/library/browse': typeof LibraryBrowseRouteWithChildren
  '/library/search': typeof LibrarySearchRoute
  '/_frontpage/': typeof FrontpageIndexRoute
  '/debug/': typeof DebugIndexRoute
  '/inbox/': typeof InboxIndexRoute
  '/sessiondraft/': typeof SessiondraftIndexRoute
  '/terminal/': typeof TerminalIndexRoute
  '/library/(browse)/artists': typeof LibrarybrowseArtistsRouteRouteWithChildren
  '/debug/design/icons': typeof DebugDesignIconsRoute
  '/debug/design/loading': typeof DebugDesignLoadingRoute
  '/inbox/folder/$path': typeof InboxFolderPathRoute
  '/inbox/task/$taskId': typeof InboxTaskTaskIdRoute
  '/library/(browse)/albums': typeof LibrarybrowseAlbumsRoute
  '/library/browse/$artist': typeof LibraryBrowseArtistRouteWithChildren
  '/library/(resources)/album/$albumId': typeof LibraryresourcesAlbumAlbumIdRouteRouteWithChildren
  '/library/(resources)/item/$itemId': typeof LibraryresourcesItemItemIdRouteRouteWithChildren
  '/inbox/folder_/$path/$hash': typeof InboxFolderPathHashRoute
  '/library/(browse)/artists/$artist': typeof LibrarybrowseArtistsArtistRoute
  '/library/browse/$artist/$albumId': typeof LibraryBrowseArtistAlbumIdRouteWithChildren
  '/library/(browse)/artists/': typeof LibrarybrowseArtistsIndexRoute
  '/library/(resources)/album/$albumId/beetsdata': typeof LibraryresourcesAlbumAlbumIdBeetsdataRoute
  '/library/(resources)/album/$albumId/identifier': typeof LibraryresourcesAlbumAlbumIdIdentifierRoute
  '/library/(resources)/item/$itemId/beetsdata': typeof LibraryresourcesItemItemIdBeetsdataRoute
  '/library/(resources)/item/$itemId/identifier': typeof LibraryresourcesItemItemIdIdentifierRoute
  '/library/browse/$artist/$albumId/$itemId': typeof LibraryBrowseArtistAlbumIdItemIdRoute
  '/library/(resources)/album/$albumId/': typeof LibraryresourcesAlbumAlbumIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/debug/audio'
    | '/debug/error'
    | '/debug/jobs'
    | '/library/browse'
    | '/library/search'
    | '/'
    | '/debug'
    | '/inbox'
    | '/sessiondraft'
    | '/terminal'
    | '/library/artists'
    | '/debug/design/icons'
    | '/debug/design/loading'
    | '/inbox/folder/$path'
    | '/inbox/task/$taskId'
    | '/library/albums'
    | '/library/browse/$artist'
    | '/library/album/$albumId'
    | '/library/item/$itemId'
    | '/inbox/folder/$path/$hash'
    | '/library/artists/$artist'
    | '/library/browse/$artist/$albumId'
    | '/library/artists/'
    | '/library/album/$albumId/beetsdata'
    | '/library/album/$albumId/identifier'
    | '/library/item/$itemId/beetsdata'
    | '/library/item/$itemId/identifier'
    | '/library/browse/$artist/$albumId/$itemId'
    | '/library/album/$albumId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/debug/audio'
    | '/debug/error'
    | '/debug/jobs'
    | '/library/browse'
    | '/library/search'
    | '/'
    | '/debug'
    | '/inbox'
    | '/sessiondraft'
    | '/terminal'
    | '/debug/design/icons'
    | '/debug/design/loading'
    | '/inbox/folder/$path'
    | '/inbox/task/$taskId'
    | '/library/albums'
    | '/library/browse/$artist'
    | '/library/item/$itemId'
    | '/inbox/folder/$path/$hash'
    | '/library/artists/$artist'
    | '/library/browse/$artist/$albumId'
    | '/library/artists'
    | '/library/album/$albumId/beetsdata'
    | '/library/album/$albumId/identifier'
    | '/library/item/$itemId/beetsdata'
    | '/library/item/$itemId/identifier'
    | '/library/browse/$artist/$albumId/$itemId'
    | '/library/album/$albumId'
  id:
    | '__root__'
    | '/debug/audio'
    | '/debug/error'
    | '/debug/jobs'
    | '/library/browse'
    | '/library/search'
    | '/_frontpage/'
    | '/debug/'
    | '/inbox/'
    | '/sessiondraft/'
    | '/terminal/'
    | '/library/(browse)/artists'
    | '/debug/design/icons'
    | '/debug/design/loading'
    | '/inbox/folder/$path'
    | '/inbox/task/$taskId'
    | '/library/(browse)/albums'
    | '/library/browse/$artist'
    | '/library/(resources)/album/$albumId'
    | '/library/(resources)/item/$itemId'
    | '/inbox/folder_/$path/$hash'
    | '/library/(browse)/artists/$artist'
    | '/library/browse/$artist/$albumId'
    | '/library/(browse)/artists/'
    | '/library/(resources)/album/$albumId/beetsdata'
    | '/library/(resources)/album/$albumId/identifier'
    | '/library/(resources)/item/$itemId/beetsdata'
    | '/library/(resources)/item/$itemId/identifier'
    | '/library/browse/$artist/$albumId/$itemId'
    | '/library/(resources)/album/$albumId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DebugAudioRoute: typeof DebugAudioRoute
  DebugErrorRoute: typeof DebugErrorRoute
  DebugJobsRoute: typeof DebugJobsRoute
  LibraryBrowseRoute: typeof LibraryBrowseRouteWithChildren
  LibrarySearchRoute: typeof LibrarySearchRoute
  FrontpageIndexRoute: typeof FrontpageIndexRoute
  DebugIndexRoute: typeof DebugIndexRoute
  InboxIndexRoute: typeof InboxIndexRoute
  SessiondraftIndexRoute: typeof SessiondraftIndexRoute
  TerminalIndexRoute: typeof TerminalIndexRoute
  LibrarybrowseArtistsRouteRoute: typeof LibrarybrowseArtistsRouteRouteWithChildren
  DebugDesignIconsRoute: typeof DebugDesignIconsRoute
  DebugDesignLoadingRoute: typeof DebugDesignLoadingRoute
  InboxFolderPathRoute: typeof InboxFolderPathRoute
  InboxTaskTaskIdRoute: typeof InboxTaskTaskIdRoute
  LibrarybrowseAlbumsRoute: typeof LibrarybrowseAlbumsRoute
  LibraryresourcesAlbumAlbumIdRouteRoute: typeof LibraryresourcesAlbumAlbumIdRouteRouteWithChildren
  LibraryresourcesItemItemIdRouteRoute: typeof LibraryresourcesItemItemIdRouteRouteWithChildren
  InboxFolderPathHashRoute: typeof InboxFolderPathHashRoute
}

const rootRouteChildren: RootRouteChildren = {
  DebugAudioRoute: DebugAudioRoute,
  DebugErrorRoute: DebugErrorRoute,
  DebugJobsRoute: DebugJobsRoute,
  LibraryBrowseRoute: LibraryBrowseRouteWithChildren,
  LibrarySearchRoute: LibrarySearchRoute,
  FrontpageIndexRoute: FrontpageIndexRoute,
  DebugIndexRoute: DebugIndexRoute,
  InboxIndexRoute: InboxIndexRoute,
  SessiondraftIndexRoute: SessiondraftIndexRoute,
  TerminalIndexRoute: TerminalIndexRoute,
  LibrarybrowseArtistsRouteRoute: LibrarybrowseArtistsRouteRouteWithChildren,
  DebugDesignIconsRoute: DebugDesignIconsRoute,
  DebugDesignLoadingRoute: DebugDesignLoadingRoute,
  InboxFolderPathRoute: InboxFolderPathRoute,
  InboxTaskTaskIdRoute: InboxTaskTaskIdRoute,
  LibrarybrowseAlbumsRoute: LibrarybrowseAlbumsRoute,
  LibraryresourcesAlbumAlbumIdRouteRoute:
    LibraryresourcesAlbumAlbumIdRouteRouteWithChildren,
  LibraryresourcesItemItemIdRouteRoute:
    LibraryresourcesItemItemIdRouteRouteWithChildren,
  InboxFolderPathHashRoute: InboxFolderPathHashRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/debug/audio",
        "/debug/error",
        "/debug/jobs",
        "/library/browse",
        "/library/search",
        "/_frontpage/",
        "/debug/",
        "/inbox/",
        "/sessiondraft/",
        "/terminal/",
        "/library/(browse)/artists",
        "/debug/design/icons",
        "/debug/design/loading",
        "/inbox/folder/$path",
        "/inbox/task/$taskId",
        "/library/(browse)/albums",
        "/library/(resources)/album/$albumId",
        "/library/(resources)/item/$itemId",
        "/inbox/folder_/$path/$hash"
      ]
    },
    "/debug/audio": {
      "filePath": "debug/audio.tsx"
    },
    "/debug/error": {
      "filePath": "debug/error.tsx"
    },
    "/debug/jobs": {
      "filePath": "debug/jobs.tsx"
    },
    "/library/browse": {
      "filePath": "library/browse.tsx",
      "children": [
        "/library/browse/$artist"
      ]
    },
    "/library/search": {
      "filePath": "library/search.tsx"
    },
    "/_frontpage/": {
      "filePath": "_frontpage/index.tsx"
    },
    "/debug/": {
      "filePath": "debug/index.tsx"
    },
    "/inbox/": {
      "filePath": "inbox/index.tsx"
    },
    "/sessiondraft/": {
      "filePath": "sessiondraft/index.tsx"
    },
    "/terminal/": {
      "filePath": "terminal/index.tsx"
    },
    "/library/(browse)/artists": {
      "filePath": "library/(browse)/artists.route.tsx",
      "children": [
        "/library/(browse)/artists/$artist",
        "/library/(browse)/artists/"
      ]
    },
    "/debug/design/icons": {
      "filePath": "debug/design/icons.tsx"
    },
    "/debug/design/loading": {
      "filePath": "debug/design/loading.tsx"
    },
    "/inbox/folder/$path": {
      "filePath": "inbox/folder.$path.tsx"
    },
    "/inbox/task/$taskId": {
      "filePath": "inbox/task.$taskId.tsx"
    },
    "/library/(browse)/albums": {
      "filePath": "library/(browse)/albums.tsx"
    },
    "/library/browse/$artist": {
      "filePath": "library/browse.$artist.tsx",
      "parent": "/library/browse",
      "children": [
        "/library/browse/$artist/$albumId"
      ]
    },
    "/library/(resources)/album/$albumId": {
      "filePath": "library/(resources)/album.$albumId.route.tsx",
      "children": [
        "/library/(resources)/album/$albumId/beetsdata",
        "/library/(resources)/album/$albumId/identifier",
        "/library/(resources)/album/$albumId/"
      ]
    },
    "/library/(resources)/item/$itemId": {
      "filePath": "library/(resources)/item.$itemId.route.tsx",
      "children": [
        "/library/(resources)/item/$itemId/beetsdata",
        "/library/(resources)/item/$itemId/identifier"
      ]
    },
    "/inbox/folder_/$path/$hash": {
      "filePath": "inbox/folder_.$path.$hash.tsx"
    },
    "/library/(browse)/artists/$artist": {
      "filePath": "library/(browse)/artists.$artist.tsx",
      "parent": "/library/(browse)/artists"
    },
    "/library/browse/$artist/$albumId": {
      "filePath": "library/browse.$artist.$albumId.tsx",
      "parent": "/library/browse/$artist",
      "children": [
        "/library/browse/$artist/$albumId/$itemId"
      ]
    },
    "/library/(browse)/artists/": {
      "filePath": "library/(browse)/artists.index.tsx",
      "parent": "/library/(browse)/artists"
    },
    "/library/(resources)/album/$albumId/beetsdata": {
      "filePath": "library/(resources)/album.$albumId.beetsdata.tsx",
      "parent": "/library/(resources)/album/$albumId"
    },
    "/library/(resources)/album/$albumId/identifier": {
      "filePath": "library/(resources)/album.$albumId.identifier.tsx",
      "parent": "/library/(resources)/album/$albumId"
    },
    "/library/(resources)/item/$itemId/beetsdata": {
      "filePath": "library/(resources)/item.$itemId.beetsdata.tsx",
      "parent": "/library/(resources)/item/$itemId"
    },
    "/library/(resources)/item/$itemId/identifier": {
      "filePath": "library/(resources)/item.$itemId.identifier.tsx",
      "parent": "/library/(resources)/item/$itemId"
    },
    "/library/browse/$artist/$albumId/$itemId": {
      "filePath": "library/browse.$artist.$albumId.$itemId.tsx",
      "parent": "/library/browse/$artist/$albumId"
    },
    "/library/(resources)/album/$albumId/": {
      "filePath": "library/(resources)/album.$albumId.index.tsx",
      "parent": "/library/(resources)/album/$albumId"
    }
  }
}
ROUTE_MANIFEST_END */
