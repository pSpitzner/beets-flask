/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as TerminalIndexRouteImport } from './routes/terminal/index'
import { Route as SessiondraftIndexRouteImport } from './routes/sessiondraft/index'
import { Route as InboxIndexRouteImport } from './routes/inbox/index'
import { Route as DebugIndexRouteImport } from './routes/debug/index'
import { Route as FrontpageIndexRouteImport } from './routes/_frontpage/index'
import { Route as LibrarySearchRouteImport } from './routes/library/search'
import { Route as DebugSortable_multiRouteImport } from './routes/debug/sortable_multi'
import { Route as DebugSortableRouteImport } from './routes/debug/sortable'
import { Route as DebugJobsRouteImport } from './routes/debug/jobs'
import { Route as DebugErrorRouteImport } from './routes/debug/error'
import { Route as DebugAudioRouteImport } from './routes/debug/audio'
import { Route as LibraryBrowseIndexRouteImport } from './routes/library/browse/index'
import { Route as LibraryBrowseAlbumsRouteImport } from './routes/library/browse/albums'
import { Route as InboxTaskTaskIdRouteImport } from './routes/inbox/task.$taskId'
import { Route as InboxFolderPathRouteImport } from './routes/inbox/folder.$path'
import { Route as DebugDesignLoadingRouteImport } from './routes/debug/design/loading'
import { Route as DebugDesignIconsRouteImport } from './routes/debug/design/icons'
import { Route as DebugDesignButtonsRouteImport } from './routes/debug/design/buttons'
import { Route as LibraryBrowseArtistsRouteRouteImport } from './routes/library/browse/artists.route'
import { Route as LibraryBrowseArtistsIndexRouteImport } from './routes/library/browse/artists.index'
import { Route as LibraryBrowseArtistsArtistRouteImport } from './routes/library/browse/artists.$artist'
import { Route as InboxFolderPathHashRouteImport } from './routes/inbox/folder_.$path.$hash'
import { Route as LibraryresourcesItemItemIdRouteRouteImport } from './routes/library/(resources)/item.$itemId.route'
import { Route as LibraryresourcesAlbumAlbumIdRouteRouteImport } from './routes/library/(resources)/album.$albumId.route'
import { Route as LibraryresourcesItemItemIdIndexRouteImport } from './routes/library/(resources)/item.$itemId.index'
import { Route as LibraryresourcesAlbumAlbumIdIndexRouteImport } from './routes/library/(resources)/album.$albumId.index'
import { Route as LibraryresourcesItemItemIdIdentifierRouteImport } from './routes/library/(resources)/item.$itemId.identifier'
import { Route as LibraryresourcesItemItemIdBeetsdataRouteImport } from './routes/library/(resources)/item.$itemId.beetsdata'
import { Route as LibraryresourcesAlbumAlbumIdIdentifierRouteImport } from './routes/library/(resources)/album.$albumId.identifier'
import { Route as LibraryresourcesAlbumAlbumIdBeetsdataRouteImport } from './routes/library/(resources)/album.$albumId.beetsdata'

const TerminalIndexRoute = TerminalIndexRouteImport.update({
  id: '/terminal/',
  path: '/terminal/',
  getParentRoute: () => rootRouteImport,
} as any)
const SessiondraftIndexRoute = SessiondraftIndexRouteImport.update({
  id: '/sessiondraft/',
  path: '/sessiondraft/',
  getParentRoute: () => rootRouteImport,
} as any)
const InboxIndexRoute = InboxIndexRouteImport.update({
  id: '/inbox/',
  path: '/inbox/',
  getParentRoute: () => rootRouteImport,
} as any)
const DebugIndexRoute = DebugIndexRouteImport.update({
  id: '/debug/',
  path: '/debug/',
  getParentRoute: () => rootRouteImport,
} as any)
const FrontpageIndexRoute = FrontpageIndexRouteImport.update({
  id: '/_frontpage/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LibrarySearchRoute = LibrarySearchRouteImport.update({
  id: '/library/search',
  path: '/library/search',
  getParentRoute: () => rootRouteImport,
} as any)
const DebugSortable_multiRoute = DebugSortable_multiRouteImport.update({
  id: '/debug/sortable_multi',
  path: '/debug/sortable_multi',
  getParentRoute: () => rootRouteImport,
} as any)
const DebugSortableRoute = DebugSortableRouteImport.update({
  id: '/debug/sortable',
  path: '/debug/sortable',
  getParentRoute: () => rootRouteImport,
} as any)
const DebugJobsRoute = DebugJobsRouteImport.update({
  id: '/debug/jobs',
  path: '/debug/jobs',
  getParentRoute: () => rootRouteImport,
} as any)
const DebugErrorRoute = DebugErrorRouteImport.update({
  id: '/debug/error',
  path: '/debug/error',
  getParentRoute: () => rootRouteImport,
} as any)
const DebugAudioRoute = DebugAudioRouteImport.update({
  id: '/debug/audio',
  path: '/debug/audio',
  getParentRoute: () => rootRouteImport,
} as any)
const LibraryBrowseIndexRoute = LibraryBrowseIndexRouteImport.update({
  id: '/library/browse/',
  path: '/library/browse/',
  getParentRoute: () => rootRouteImport,
} as any)
const LibraryBrowseAlbumsRoute = LibraryBrowseAlbumsRouteImport.update({
  id: '/library/browse/albums',
  path: '/library/browse/albums',
  getParentRoute: () => rootRouteImport,
} as any)
const InboxTaskTaskIdRoute = InboxTaskTaskIdRouteImport.update({
  id: '/inbox/task/$taskId',
  path: '/inbox/task/$taskId',
  getParentRoute: () => rootRouteImport,
} as any)
const InboxFolderPathRoute = InboxFolderPathRouteImport.update({
  id: '/inbox/folder/$path',
  path: '/inbox/folder/$path',
  getParentRoute: () => rootRouteImport,
} as any)
const DebugDesignLoadingRoute = DebugDesignLoadingRouteImport.update({
  id: '/debug/design/loading',
  path: '/debug/design/loading',
  getParentRoute: () => rootRouteImport,
} as any)
const DebugDesignIconsRoute = DebugDesignIconsRouteImport.update({
  id: '/debug/design/icons',
  path: '/debug/design/icons',
  getParentRoute: () => rootRouteImport,
} as any)
const DebugDesignButtonsRoute = DebugDesignButtonsRouteImport.update({
  id: '/debug/design/buttons',
  path: '/debug/design/buttons',
  getParentRoute: () => rootRouteImport,
} as any)
const LibraryBrowseArtistsRouteRoute =
  LibraryBrowseArtistsRouteRouteImport.update({
    id: '/library/browse/artists',
    path: '/library/browse/artists',
    getParentRoute: () => rootRouteImport,
  } as any)
const LibraryBrowseArtistsIndexRoute =
  LibraryBrowseArtistsIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LibraryBrowseArtistsRouteRoute,
  } as any)
const LibraryBrowseArtistsArtistRoute =
  LibraryBrowseArtistsArtistRouteImport.update({
    id: '/$artist',
    path: '/$artist',
    getParentRoute: () => LibraryBrowseArtistsRouteRoute,
  } as any)
const InboxFolderPathHashRoute = InboxFolderPathHashRouteImport.update({
  id: '/inbox/folder_/$path/$hash',
  path: '/inbox/folder/$path/$hash',
  getParentRoute: () => rootRouteImport,
} as any)
const LibraryresourcesItemItemIdRouteRoute =
  LibraryresourcesItemItemIdRouteRouteImport.update({
    id: '/library/(resources)/item/$itemId',
    path: '/library/item/$itemId',
    getParentRoute: () => rootRouteImport,
  } as any)
const LibraryresourcesAlbumAlbumIdRouteRoute =
  LibraryresourcesAlbumAlbumIdRouteRouteImport.update({
    id: '/library/(resources)/album/$albumId',
    path: '/library/album/$albumId',
    getParentRoute: () => rootRouteImport,
  } as any)
const LibraryresourcesItemItemIdIndexRoute =
  LibraryresourcesItemItemIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LibraryresourcesItemItemIdRouteRoute,
  } as any)
const LibraryresourcesAlbumAlbumIdIndexRoute =
  LibraryresourcesAlbumAlbumIdIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LibraryresourcesAlbumAlbumIdRouteRoute,
  } as any)
const LibraryresourcesItemItemIdIdentifierRoute =
  LibraryresourcesItemItemIdIdentifierRouteImport.update({
    id: '/identifier',
    path: '/identifier',
    getParentRoute: () => LibraryresourcesItemItemIdRouteRoute,
  } as any)
const LibraryresourcesItemItemIdBeetsdataRoute =
  LibraryresourcesItemItemIdBeetsdataRouteImport.update({
    id: '/beetsdata',
    path: '/beetsdata',
    getParentRoute: () => LibraryresourcesItemItemIdRouteRoute,
  } as any)
const LibraryresourcesAlbumAlbumIdIdentifierRoute =
  LibraryresourcesAlbumAlbumIdIdentifierRouteImport.update({
    id: '/identifier',
    path: '/identifier',
    getParentRoute: () => LibraryresourcesAlbumAlbumIdRouteRoute,
  } as any)
const LibraryresourcesAlbumAlbumIdBeetsdataRoute =
  LibraryresourcesAlbumAlbumIdBeetsdataRouteImport.update({
    id: '/beetsdata',
    path: '/beetsdata',
    getParentRoute: () => LibraryresourcesAlbumAlbumIdRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/debug/audio': typeof DebugAudioRoute
  '/debug/error': typeof DebugErrorRoute
  '/debug/jobs': typeof DebugJobsRoute
  '/debug/sortable': typeof DebugSortableRoute
  '/debug/sortable_multi': typeof DebugSortable_multiRoute
  '/library/search': typeof LibrarySearchRoute
  '/': typeof FrontpageIndexRoute
  '/debug': typeof DebugIndexRoute
  '/inbox': typeof InboxIndexRoute
  '/sessiondraft': typeof SessiondraftIndexRoute
  '/terminal': typeof TerminalIndexRoute
  '/library/browse/artists': typeof LibraryBrowseArtistsRouteRouteWithChildren
  '/debug/design/buttons': typeof DebugDesignButtonsRoute
  '/debug/design/icons': typeof DebugDesignIconsRoute
  '/debug/design/loading': typeof DebugDesignLoadingRoute
  '/inbox/folder/$path': typeof InboxFolderPathRoute
  '/inbox/task/$taskId': typeof InboxTaskTaskIdRoute
  '/library/browse/albums': typeof LibraryBrowseAlbumsRoute
  '/library/browse': typeof LibraryBrowseIndexRoute
  '/library/album/$albumId': typeof LibraryresourcesAlbumAlbumIdRouteRouteWithChildren
  '/library/item/$itemId': typeof LibraryresourcesItemItemIdRouteRouteWithChildren
  '/inbox/folder/$path/$hash': typeof InboxFolderPathHashRoute
  '/library/browse/artists/$artist': typeof LibraryBrowseArtistsArtistRoute
  '/library/browse/artists/': typeof LibraryBrowseArtistsIndexRoute
  '/library/album/$albumId/beetsdata': typeof LibraryresourcesAlbumAlbumIdBeetsdataRoute
  '/library/album/$albumId/identifier': typeof LibraryresourcesAlbumAlbumIdIdentifierRoute
  '/library/item/$itemId/beetsdata': typeof LibraryresourcesItemItemIdBeetsdataRoute
  '/library/item/$itemId/identifier': typeof LibraryresourcesItemItemIdIdentifierRoute
  '/library/album/$albumId/': typeof LibraryresourcesAlbumAlbumIdIndexRoute
  '/library/item/$itemId/': typeof LibraryresourcesItemItemIdIndexRoute
}
export interface FileRoutesByTo {
  '/debug/audio': typeof DebugAudioRoute
  '/debug/error': typeof DebugErrorRoute
  '/debug/jobs': typeof DebugJobsRoute
  '/debug/sortable': typeof DebugSortableRoute
  '/debug/sortable_multi': typeof DebugSortable_multiRoute
  '/library/search': typeof LibrarySearchRoute
  '/': typeof FrontpageIndexRoute
  '/debug': typeof DebugIndexRoute
  '/inbox': typeof InboxIndexRoute
  '/sessiondraft': typeof SessiondraftIndexRoute
  '/terminal': typeof TerminalIndexRoute
  '/debug/design/buttons': typeof DebugDesignButtonsRoute
  '/debug/design/icons': typeof DebugDesignIconsRoute
  '/debug/design/loading': typeof DebugDesignLoadingRoute
  '/inbox/folder/$path': typeof InboxFolderPathRoute
  '/inbox/task/$taskId': typeof InboxTaskTaskIdRoute
  '/library/browse/albums': typeof LibraryBrowseAlbumsRoute
  '/library/browse': typeof LibraryBrowseIndexRoute
  '/inbox/folder/$path/$hash': typeof InboxFolderPathHashRoute
  '/library/browse/artists/$artist': typeof LibraryBrowseArtistsArtistRoute
  '/library/browse/artists': typeof LibraryBrowseArtistsIndexRoute
  '/library/album/$albumId/beetsdata': typeof LibraryresourcesAlbumAlbumIdBeetsdataRoute
  '/library/album/$albumId/identifier': typeof LibraryresourcesAlbumAlbumIdIdentifierRoute
  '/library/item/$itemId/beetsdata': typeof LibraryresourcesItemItemIdBeetsdataRoute
  '/library/item/$itemId/identifier': typeof LibraryresourcesItemItemIdIdentifierRoute
  '/library/album/$albumId': typeof LibraryresourcesAlbumAlbumIdIndexRoute
  '/library/item/$itemId': typeof LibraryresourcesItemItemIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/debug/audio': typeof DebugAudioRoute
  '/debug/error': typeof DebugErrorRoute
  '/debug/jobs': typeof DebugJobsRoute
  '/debug/sortable': typeof DebugSortableRoute
  '/debug/sortable_multi': typeof DebugSortable_multiRoute
  '/library/search': typeof LibrarySearchRoute
  '/_frontpage/': typeof FrontpageIndexRoute
  '/debug/': typeof DebugIndexRoute
  '/inbox/': typeof InboxIndexRoute
  '/sessiondraft/': typeof SessiondraftIndexRoute
  '/terminal/': typeof TerminalIndexRoute
  '/library/browse/artists': typeof LibraryBrowseArtistsRouteRouteWithChildren
  '/debug/design/buttons': typeof DebugDesignButtonsRoute
  '/debug/design/icons': typeof DebugDesignIconsRoute
  '/debug/design/loading': typeof DebugDesignLoadingRoute
  '/inbox/folder/$path': typeof InboxFolderPathRoute
  '/inbox/task/$taskId': typeof InboxTaskTaskIdRoute
  '/library/browse/albums': typeof LibraryBrowseAlbumsRoute
  '/library/browse/': typeof LibraryBrowseIndexRoute
  '/library/(resources)/album/$albumId': typeof LibraryresourcesAlbumAlbumIdRouteRouteWithChildren
  '/library/(resources)/item/$itemId': typeof LibraryresourcesItemItemIdRouteRouteWithChildren
  '/inbox/folder_/$path/$hash': typeof InboxFolderPathHashRoute
  '/library/browse/artists/$artist': typeof LibraryBrowseArtistsArtistRoute
  '/library/browse/artists/': typeof LibraryBrowseArtistsIndexRoute
  '/library/(resources)/album/$albumId/beetsdata': typeof LibraryresourcesAlbumAlbumIdBeetsdataRoute
  '/library/(resources)/album/$albumId/identifier': typeof LibraryresourcesAlbumAlbumIdIdentifierRoute
  '/library/(resources)/item/$itemId/beetsdata': typeof LibraryresourcesItemItemIdBeetsdataRoute
  '/library/(resources)/item/$itemId/identifier': typeof LibraryresourcesItemItemIdIdentifierRoute
  '/library/(resources)/album/$albumId/': typeof LibraryresourcesAlbumAlbumIdIndexRoute
  '/library/(resources)/item/$itemId/': typeof LibraryresourcesItemItemIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/debug/audio'
    | '/debug/error'
    | '/debug/jobs'
    | '/debug/sortable'
    | '/debug/sortable_multi'
    | '/library/search'
    | '/'
    | '/debug'
    | '/inbox'
    | '/sessiondraft'
    | '/terminal'
    | '/library/browse/artists'
    | '/debug/design/buttons'
    | '/debug/design/icons'
    | '/debug/design/loading'
    | '/inbox/folder/$path'
    | '/inbox/task/$taskId'
    | '/library/browse/albums'
    | '/library/browse'
    | '/library/album/$albumId'
    | '/library/item/$itemId'
    | '/inbox/folder/$path/$hash'
    | '/library/browse/artists/$artist'
    | '/library/browse/artists/'
    | '/library/album/$albumId/beetsdata'
    | '/library/album/$albumId/identifier'
    | '/library/item/$itemId/beetsdata'
    | '/library/item/$itemId/identifier'
    | '/library/album/$albumId/'
    | '/library/item/$itemId/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/debug/audio'
    | '/debug/error'
    | '/debug/jobs'
    | '/debug/sortable'
    | '/debug/sortable_multi'
    | '/library/search'
    | '/'
    | '/debug'
    | '/inbox'
    | '/sessiondraft'
    | '/terminal'
    | '/debug/design/buttons'
    | '/debug/design/icons'
    | '/debug/design/loading'
    | '/inbox/folder/$path'
    | '/inbox/task/$taskId'
    | '/library/browse/albums'
    | '/library/browse'
    | '/inbox/folder/$path/$hash'
    | '/library/browse/artists/$artist'
    | '/library/browse/artists'
    | '/library/album/$albumId/beetsdata'
    | '/library/album/$albumId/identifier'
    | '/library/item/$itemId/beetsdata'
    | '/library/item/$itemId/identifier'
    | '/library/album/$albumId'
    | '/library/item/$itemId'
  id:
    | '__root__'
    | '/debug/audio'
    | '/debug/error'
    | '/debug/jobs'
    | '/debug/sortable'
    | '/debug/sortable_multi'
    | '/library/search'
    | '/_frontpage/'
    | '/debug/'
    | '/inbox/'
    | '/sessiondraft/'
    | '/terminal/'
    | '/library/browse/artists'
    | '/debug/design/buttons'
    | '/debug/design/icons'
    | '/debug/design/loading'
    | '/inbox/folder/$path'
    | '/inbox/task/$taskId'
    | '/library/browse/albums'
    | '/library/browse/'
    | '/library/(resources)/album/$albumId'
    | '/library/(resources)/item/$itemId'
    | '/inbox/folder_/$path/$hash'
    | '/library/browse/artists/$artist'
    | '/library/browse/artists/'
    | '/library/(resources)/album/$albumId/beetsdata'
    | '/library/(resources)/album/$albumId/identifier'
    | '/library/(resources)/item/$itemId/beetsdata'
    | '/library/(resources)/item/$itemId/identifier'
    | '/library/(resources)/album/$albumId/'
    | '/library/(resources)/item/$itemId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DebugAudioRoute: typeof DebugAudioRoute
  DebugErrorRoute: typeof DebugErrorRoute
  DebugJobsRoute: typeof DebugJobsRoute
  DebugSortableRoute: typeof DebugSortableRoute
  DebugSortable_multiRoute: typeof DebugSortable_multiRoute
  LibrarySearchRoute: typeof LibrarySearchRoute
  FrontpageIndexRoute: typeof FrontpageIndexRoute
  DebugIndexRoute: typeof DebugIndexRoute
  InboxIndexRoute: typeof InboxIndexRoute
  SessiondraftIndexRoute: typeof SessiondraftIndexRoute
  TerminalIndexRoute: typeof TerminalIndexRoute
  LibraryBrowseArtistsRouteRoute: typeof LibraryBrowseArtistsRouteRouteWithChildren
  DebugDesignButtonsRoute: typeof DebugDesignButtonsRoute
  DebugDesignIconsRoute: typeof DebugDesignIconsRoute
  DebugDesignLoadingRoute: typeof DebugDesignLoadingRoute
  InboxFolderPathRoute: typeof InboxFolderPathRoute
  InboxTaskTaskIdRoute: typeof InboxTaskTaskIdRoute
  LibraryBrowseAlbumsRoute: typeof LibraryBrowseAlbumsRoute
  LibraryBrowseIndexRoute: typeof LibraryBrowseIndexRoute
  LibraryresourcesAlbumAlbumIdRouteRoute: typeof LibraryresourcesAlbumAlbumIdRouteRouteWithChildren
  LibraryresourcesItemItemIdRouteRoute: typeof LibraryresourcesItemItemIdRouteRouteWithChildren
  InboxFolderPathHashRoute: typeof InboxFolderPathHashRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/terminal/': {
      id: '/terminal/'
      path: '/terminal'
      fullPath: '/terminal'
      preLoaderRoute: typeof TerminalIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sessiondraft/': {
      id: '/sessiondraft/'
      path: '/sessiondraft'
      fullPath: '/sessiondraft'
      preLoaderRoute: typeof SessiondraftIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inbox/': {
      id: '/inbox/'
      path: '/inbox'
      fullPath: '/inbox'
      preLoaderRoute: typeof InboxIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/debug/': {
      id: '/debug/'
      path: '/debug'
      fullPath: '/debug'
      preLoaderRoute: typeof DebugIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_frontpage/': {
      id: '/_frontpage/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof FrontpageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/library/search': {
      id: '/library/search'
      path: '/library/search'
      fullPath: '/library/search'
      preLoaderRoute: typeof LibrarySearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/debug/sortable_multi': {
      id: '/debug/sortable_multi'
      path: '/debug/sortable_multi'
      fullPath: '/debug/sortable_multi'
      preLoaderRoute: typeof DebugSortable_multiRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/debug/sortable': {
      id: '/debug/sortable'
      path: '/debug/sortable'
      fullPath: '/debug/sortable'
      preLoaderRoute: typeof DebugSortableRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/debug/jobs': {
      id: '/debug/jobs'
      path: '/debug/jobs'
      fullPath: '/debug/jobs'
      preLoaderRoute: typeof DebugJobsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/debug/error': {
      id: '/debug/error'
      path: '/debug/error'
      fullPath: '/debug/error'
      preLoaderRoute: typeof DebugErrorRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/debug/audio': {
      id: '/debug/audio'
      path: '/debug/audio'
      fullPath: '/debug/audio'
      preLoaderRoute: typeof DebugAudioRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/library/browse/': {
      id: '/library/browse/'
      path: '/library/browse'
      fullPath: '/library/browse'
      preLoaderRoute: typeof LibraryBrowseIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/library/browse/albums': {
      id: '/library/browse/albums'
      path: '/library/browse/albums'
      fullPath: '/library/browse/albums'
      preLoaderRoute: typeof LibraryBrowseAlbumsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inbox/task/$taskId': {
      id: '/inbox/task/$taskId'
      path: '/inbox/task/$taskId'
      fullPath: '/inbox/task/$taskId'
      preLoaderRoute: typeof InboxTaskTaskIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inbox/folder/$path': {
      id: '/inbox/folder/$path'
      path: '/inbox/folder/$path'
      fullPath: '/inbox/folder/$path'
      preLoaderRoute: typeof InboxFolderPathRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/debug/design/loading': {
      id: '/debug/design/loading'
      path: '/debug/design/loading'
      fullPath: '/debug/design/loading'
      preLoaderRoute: typeof DebugDesignLoadingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/debug/design/icons': {
      id: '/debug/design/icons'
      path: '/debug/design/icons'
      fullPath: '/debug/design/icons'
      preLoaderRoute: typeof DebugDesignIconsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/debug/design/buttons': {
      id: '/debug/design/buttons'
      path: '/debug/design/buttons'
      fullPath: '/debug/design/buttons'
      preLoaderRoute: typeof DebugDesignButtonsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/library/browse/artists': {
      id: '/library/browse/artists'
      path: '/library/browse/artists'
      fullPath: '/library/browse/artists'
      preLoaderRoute: typeof LibraryBrowseArtistsRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/library/browse/artists/': {
      id: '/library/browse/artists/'
      path: '/'
      fullPath: '/library/browse/artists/'
      preLoaderRoute: typeof LibraryBrowseArtistsIndexRouteImport
      parentRoute: typeof LibraryBrowseArtistsRouteRoute
    }
    '/library/browse/artists/$artist': {
      id: '/library/browse/artists/$artist'
      path: '/$artist'
      fullPath: '/library/browse/artists/$artist'
      preLoaderRoute: typeof LibraryBrowseArtistsArtistRouteImport
      parentRoute: typeof LibraryBrowseArtistsRouteRoute
    }
    '/inbox/folder_/$path/$hash': {
      id: '/inbox/folder_/$path/$hash'
      path: '/inbox/folder/$path/$hash'
      fullPath: '/inbox/folder/$path/$hash'
      preLoaderRoute: typeof InboxFolderPathHashRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/library/(resources)/item/$itemId': {
      id: '/library/(resources)/item/$itemId'
      path: '/library/item/$itemId'
      fullPath: '/library/item/$itemId'
      preLoaderRoute: typeof LibraryresourcesItemItemIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/library/(resources)/album/$albumId': {
      id: '/library/(resources)/album/$albumId'
      path: '/library/album/$albumId'
      fullPath: '/library/album/$albumId'
      preLoaderRoute: typeof LibraryresourcesAlbumAlbumIdRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/library/(resources)/item/$itemId/': {
      id: '/library/(resources)/item/$itemId/'
      path: '/'
      fullPath: '/library/item/$itemId/'
      preLoaderRoute: typeof LibraryresourcesItemItemIdIndexRouteImport
      parentRoute: typeof LibraryresourcesItemItemIdRouteRoute
    }
    '/library/(resources)/album/$albumId/': {
      id: '/library/(resources)/album/$albumId/'
      path: '/'
      fullPath: '/library/album/$albumId/'
      preLoaderRoute: typeof LibraryresourcesAlbumAlbumIdIndexRouteImport
      parentRoute: typeof LibraryresourcesAlbumAlbumIdRouteRoute
    }
    '/library/(resources)/item/$itemId/identifier': {
      id: '/library/(resources)/item/$itemId/identifier'
      path: '/identifier'
      fullPath: '/library/item/$itemId/identifier'
      preLoaderRoute: typeof LibraryresourcesItemItemIdIdentifierRouteImport
      parentRoute: typeof LibraryresourcesItemItemIdRouteRoute
    }
    '/library/(resources)/item/$itemId/beetsdata': {
      id: '/library/(resources)/item/$itemId/beetsdata'
      path: '/beetsdata'
      fullPath: '/library/item/$itemId/beetsdata'
      preLoaderRoute: typeof LibraryresourcesItemItemIdBeetsdataRouteImport
      parentRoute: typeof LibraryresourcesItemItemIdRouteRoute
    }
    '/library/(resources)/album/$albumId/identifier': {
      id: '/library/(resources)/album/$albumId/identifier'
      path: '/identifier'
      fullPath: '/library/album/$albumId/identifier'
      preLoaderRoute: typeof LibraryresourcesAlbumAlbumIdIdentifierRouteImport
      parentRoute: typeof LibraryresourcesAlbumAlbumIdRouteRoute
    }
    '/library/(resources)/album/$albumId/beetsdata': {
      id: '/library/(resources)/album/$albumId/beetsdata'
      path: '/beetsdata'
      fullPath: '/library/album/$albumId/beetsdata'
      preLoaderRoute: typeof LibraryresourcesAlbumAlbumIdBeetsdataRouteImport
      parentRoute: typeof LibraryresourcesAlbumAlbumIdRouteRoute
    }
  }
}

interface LibraryBrowseArtistsRouteRouteChildren {
  LibraryBrowseArtistsArtistRoute: typeof LibraryBrowseArtistsArtistRoute
  LibraryBrowseArtistsIndexRoute: typeof LibraryBrowseArtistsIndexRoute
}

const LibraryBrowseArtistsRouteRouteChildren: LibraryBrowseArtistsRouteRouteChildren =
  {
    LibraryBrowseArtistsArtistRoute: LibraryBrowseArtistsArtistRoute,
    LibraryBrowseArtistsIndexRoute: LibraryBrowseArtistsIndexRoute,
  }

const LibraryBrowseArtistsRouteRouteWithChildren =
  LibraryBrowseArtistsRouteRoute._addFileChildren(
    LibraryBrowseArtistsRouteRouteChildren,
  )

interface LibraryresourcesAlbumAlbumIdRouteRouteChildren {
  LibraryresourcesAlbumAlbumIdBeetsdataRoute: typeof LibraryresourcesAlbumAlbumIdBeetsdataRoute
  LibraryresourcesAlbumAlbumIdIdentifierRoute: typeof LibraryresourcesAlbumAlbumIdIdentifierRoute
  LibraryresourcesAlbumAlbumIdIndexRoute: typeof LibraryresourcesAlbumAlbumIdIndexRoute
}

const LibraryresourcesAlbumAlbumIdRouteRouteChildren: LibraryresourcesAlbumAlbumIdRouteRouteChildren =
  {
    LibraryresourcesAlbumAlbumIdBeetsdataRoute:
      LibraryresourcesAlbumAlbumIdBeetsdataRoute,
    LibraryresourcesAlbumAlbumIdIdentifierRoute:
      LibraryresourcesAlbumAlbumIdIdentifierRoute,
    LibraryresourcesAlbumAlbumIdIndexRoute:
      LibraryresourcesAlbumAlbumIdIndexRoute,
  }

const LibraryresourcesAlbumAlbumIdRouteRouteWithChildren =
  LibraryresourcesAlbumAlbumIdRouteRoute._addFileChildren(
    LibraryresourcesAlbumAlbumIdRouteRouteChildren,
  )

interface LibraryresourcesItemItemIdRouteRouteChildren {
  LibraryresourcesItemItemIdBeetsdataRoute: typeof LibraryresourcesItemItemIdBeetsdataRoute
  LibraryresourcesItemItemIdIdentifierRoute: typeof LibraryresourcesItemItemIdIdentifierRoute
  LibraryresourcesItemItemIdIndexRoute: typeof LibraryresourcesItemItemIdIndexRoute
}

const LibraryresourcesItemItemIdRouteRouteChildren: LibraryresourcesItemItemIdRouteRouteChildren =
  {
    LibraryresourcesItemItemIdBeetsdataRoute:
      LibraryresourcesItemItemIdBeetsdataRoute,
    LibraryresourcesItemItemIdIdentifierRoute:
      LibraryresourcesItemItemIdIdentifierRoute,
    LibraryresourcesItemItemIdIndexRoute: LibraryresourcesItemItemIdIndexRoute,
  }

const LibraryresourcesItemItemIdRouteRouteWithChildren =
  LibraryresourcesItemItemIdRouteRoute._addFileChildren(
    LibraryresourcesItemItemIdRouteRouteChildren,
  )

const rootRouteChildren: RootRouteChildren = {
  DebugAudioRoute: DebugAudioRoute,
  DebugErrorRoute: DebugErrorRoute,
  DebugJobsRoute: DebugJobsRoute,
  DebugSortableRoute: DebugSortableRoute,
  DebugSortable_multiRoute: DebugSortable_multiRoute,
  LibrarySearchRoute: LibrarySearchRoute,
  FrontpageIndexRoute: FrontpageIndexRoute,
  DebugIndexRoute: DebugIndexRoute,
  InboxIndexRoute: InboxIndexRoute,
  SessiondraftIndexRoute: SessiondraftIndexRoute,
  TerminalIndexRoute: TerminalIndexRoute,
  LibraryBrowseArtistsRouteRoute: LibraryBrowseArtistsRouteRouteWithChildren,
  DebugDesignButtonsRoute: DebugDesignButtonsRoute,
  DebugDesignIconsRoute: DebugDesignIconsRoute,
  DebugDesignLoadingRoute: DebugDesignLoadingRoute,
  InboxFolderPathRoute: InboxFolderPathRoute,
  InboxTaskTaskIdRoute: InboxTaskTaskIdRoute,
  LibraryBrowseAlbumsRoute: LibraryBrowseAlbumsRoute,
  LibraryBrowseIndexRoute: LibraryBrowseIndexRoute,
  LibraryresourcesAlbumAlbumIdRouteRoute:
    LibraryresourcesAlbumAlbumIdRouteRouteWithChildren,
  LibraryresourcesItemItemIdRouteRoute:
    LibraryresourcesItemItemIdRouteRouteWithChildren,
  InboxFolderPathHashRoute: InboxFolderPathHashRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
