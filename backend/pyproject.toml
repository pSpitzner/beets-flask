[project]
name = "beets-flask"
description = "An opinionated web-interface around the music organizer [beets](https://beets.io/)"
version = "1.0.0"
authors = [
    { name = "F. Paul Spitzner", email = "paul.spitzner@gmail.com" },
    { name = "Sebastian B. Mohr", email = "sebastian@mohrenclan.de" },
]
requires-python = ">= 3.11"
readme = "../README.md"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Web Environment",
    "License :: OSI Approved :: MIT License",
]
dependencies = [
    "quart>=0.20.0",
    "confuse>=2.0.1",
    "beets==2.2.0",
    "sqlalchemy>=2.0.35",
    "rq>=2.0.0",
    "watchdog>=5.0.3",
    "requests>=2.32.3",
    "python-socketio>=5.11.4",
    "pillow>=10.4.0",
    "cachetools>=5.3.3",
    "libtmux>=0.37.0",
    "Deprecated>=1.2.18",
    "nest_asyncio>=1.6.0",
    # Used for hosting the web-interface & api
    "uvicorn>=0.34.0",
    # beets plugin dependencies
    "pylast>=5.2.0",
    "py2ts @ git+https://github.com/semohr/py2ts.git@v0.2.1",
    #"scantree>=0.0.4",
    "natsort",
    "tinytag",
    "pydub",
    "aiohttp",
    "aiofiles",
    "numpy",
    "pandas",
    "typing_extensions",
]

[project.optional-dependencies]
# Can be install with e.g. `pip install -e .[dev]`
test = [
    "pytest>=8.2.2",
    "pytest-asyncio>=0.23.8",
    "pytest-cov>=5.0.0",
    "fakeredis",
]
dev = ["ruff>=0.6.5", "pre-commit>=3.8.0", "beets_flask[typed]"]
typed = [
    "types-cachetools",
    "types-requests",
    "mypy>=1.14.1",
    "types-cachetools",
    "types-Deprecated",
    "types-aiofiles",
    "types-pytz",
    "pandas-stubs",
]
all = ["beets_flask[dev,test]"]
docs = [
    "sphinx>=8.0.2",
    "furo>=2024.8.6",
    "sphinx-copybutton>=0.5.2",
    "sphinx-inline-tabs>=2023.4.21",
    "sphinxcontrib-typer[html]>=0.5.0",
    "myst-parser>=4.0.0",
    "myst-nb>=1.1.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
package = "./beets_flask"
packages = ["beets_flask"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
include = ["pyproject.toml", "beets_flask/**/*.py"]
exclude = ["beets_flask/**/dirhash.py"]

[tool.ruff.lint.per-file-ignores]
"**/tests/**/*" = ["D"]


[tool.ruff.lint]
select = [
    "I",
    "D",
    # Augment the convention by requiring an imperative mood for all docstrings.
    "D401",
    # Unused imports
]
ignore = [
    # Ignore req. for public facing functions docstrings
    "F401",
    "D10",
    "D401",
    "D202",
]
fixable = ["ALL"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
known-first-party = ["beets_flask"]

[tool.pytest.ini_options]
# addopts = ["--import-mode=importlib", "--cov=beets_flask"]
addopts = ["--import-mode=importlib"]
filterwarnings = [
    "error",
    "ignore::sqlalchemy.exc.SAWarning",
    "ignore::DeprecationWarning",
]
pythonpath = ["."]
asyncio_mode = "auto"
log_format = "%(relativeCreated)-8d [%(levelname)-5s] %(name)s %(filename)-8s:%(lineno)d %(message)s"

[tool.coverage.report]
omit = ["*/tests/*"]

[tool.mypy]
check_untyped_defs = true
disallow_untyped_decorators = true
allow_redefinition = true

[[tool.mypy.overrides]]
# Suppresses error messages about imports that cannot be resolved.
module = [
    "socketio.*",
    "beets.*",
    "confuse.*",
    "mediafile.*",
    "nest_asyncio",
    "dirhash",
]
ignore_missing_imports = true
