# main.py
from typing import Any

from py2ts import generate_ts
from py2ts.data import ts_reference_str

from beets_flask.importer.states import (
    SerializedSessionState,
)
from beets_flask.invoker import EnqueueKind
from beets_flask.server.routes.inbox import Folder, InboxStats
from beets_flask.server.routes.library.resources import (
    AlbumResponse,
    AlbumResponseExpanded,
    AlbumResponseMinimal,
    AlbumResponseMinimalExpanded,
    ItemResponse,
    ItemResponseMinimal,
)
from beets_flask.server.routes.library.stats import LibraryStats
from beets_flask.server.websocket.status import FolderStatusUpdate, JobStatusUpdate

prefix = """/*
 * This file is generated by ../backend/generate_types.py
 * Do not edit this file manually!
 */
"""

elements: list[type] = []

# Session state
elements.append(SerializedSessionState)

# ------------------------------- inbox routes ------------------------------- #

# Folder
elements.append(Folder)
elements.append(InboxStats)


# Invoker
elements.append(EnqueueKind)

# ------------------------------ library routes ------------------------------ #

# Stats
elements.append(LibraryStats)

# Item responses
elements.append(ItemResponse)
elements.append(ItemResponseMinimal)

# Album responses
elements.append(AlbumResponse)
elements.append(AlbumResponseMinimal)
elements.append(AlbumResponseExpanded)
elements.append(AlbumResponseMinimalExpanded)

# ---------------------------------------------------------------------------- #

# FIXME: py2ts cant handle classes that contain type annotations where the
# type was imported with `it TYPE_CHECKING`
# elements.append(FolderStatusUpdate)
# elements.append(JobStatusUpdate)


# with open("../frontend/src/pythonTypes.ts", "w") as f:
#     f.write(prefix)

#     f.write(ts_reference_str([generate_ts(e) for e in elements]))

# print("âœ… Typescript types generated successfully!")
