name: docker-hub

permissions:
    contents: read
    packages: write

on:
    push:
        tags:
            - "v*.*.*"
            - "test-*"
    workflow_dispatch:

jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              # generate Docker tags based on the following events/attributes
              with:
                  # list of Docker images to use as base name for tags
                  images: |
                      pspitzner/beets-flask
                      ghcr.io/pspitzner/beets-flask
                  # generate Docker tags based on the following events/attributes
                  tags: |
                      type=ref,event=tag
                      type=semver,pattern={{raw}}
                      type=sha
                      type=raw,value=stable,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
                      type=raw,value=latest,enable=true

            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push
              uses: docker/build-push-action@v6
              with:
                  file: ./Dockerfile
                  platforms: linux/amd64,linux/arm64
                  target: prod
                  context: .
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
